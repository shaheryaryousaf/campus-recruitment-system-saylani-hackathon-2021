{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { COMPLETE_C_PROFILE_SUCCESS, COMPLETE_C_PROFILE_FAIL, GET_C_PROFILES_SUCCESS, GET_C_PROFILES_FAIL } from \"./types\";\nimport { firestore } from \"../config/firebase\";\nexport var completeCompanyProfile = function completeCompanyProfile(data) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              firestore.collection('companies').add(data);\n              dispatch({\n                type: COMPLETE_C_PROFILE_SUCCESS,\n                payload: res\n              });\n            } catch (err) {\n              dispatch({\n                type: COMPLETE_C_PROFILE_FAIL\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getAllCompanyProfiles = function getAllCompanyProfiles() {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            try {\n              firestore.collection('companies').onSnapshot(function (snapshot) {\n                var postData = [];\n                snapshot.forEach(function (doc) {\n                  return postData.push(_objectSpread(_objectSpread({}, doc.data()), {}, {\n                    id: doc.id\n                  }));\n                });\n                console.log(postData);\n                dispatch({\n                  type: GET_C_PROFILES_SUCCESS,\n                  payload: postData\n                });\n              });\n            } catch (error) {\n              dispatch({\n                type: GET_C_PROFILES_FAIL\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["H:/React/native/campus-recruitment/app/actions/companies.js"],"names":["COMPLETE_C_PROFILE_SUCCESS","COMPLETE_C_PROFILE_FAIL","GET_C_PROFILES_SUCCESS","GET_C_PROFILES_FAIL","firestore","completeCompanyProfile","data","dispatch","collection","add","type","payload","res","err","getAllCompanyProfiles","onSnapshot","snapshot","postData","forEach","doc","push","id","console","log","error"],"mappings":";;;;;;;AAAA,SACEA,0BADF,EAEEC,uBAFF,EAGEC,sBAHF,EAIEC,mBAJF;AAMA,SAASC,SAAT;AAKA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD;AAAA,SAAU,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAC9C,gBAAI;AACFH,cAAAA,SAAS,CAACI,UAAV,CAAqB,WAArB,EAAkCC,GAAlC,CAAsCH,IAAtC;AACAC,cAAAA,QAAQ,CAAC;AACPG,gBAAAA,IAAI,EAAEV,0BADC;AAEPW,gBAAAA,OAAO,EAAEC;AAFF,eAAD,CAAR;AAID,aAND,CAME,OAAOC,GAAP,EAAY;AACZN,cAAAA,QAAQ,CAAC;AACPG,gBAAAA,IAAI,EAAET;AADC,eAAD,CAAR;AAGD;;AAX6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAAA,CAA/B;AAiBP,OAAO,IAAMa,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAM,kBAAOP,QAAP;AAAA;AAAA;AAAA;AAAA;AACzC,gBAAI;AACFH,cAAAA,SAAS,CAACI,UAAV,CAAqB,WAArB,EAAkCO,UAAlC,CAA6C,UAACC,QAAD,EAAc;AACzD,oBAAMC,QAAQ,GAAG,EAAjB;AACAD,gBAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,GAAD;AAAA,yBAASF,QAAQ,CAACG,IAAT,iCAAmBD,GAAG,CAACb,IAAJ,EAAnB;AAA+Be,oBAAAA,EAAE,EAAEF,GAAG,CAACE;AAAvC,qBAAT;AAAA,iBAAjB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAV,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAER,sBADC;AAEPS,kBAAAA,OAAO,EAAEM;AAFF,iBAAD,CAAR;AAID,eARD;AASD,aAVD,CAUE,OAAOO,KAAP,EAAc;AACdjB,cAAAA,QAAQ,CAAC;AACPG,gBAAAA,IAAI,EAAEP;AADC,eAAD,CAAR;AAGD;;AAfwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAA9B","sourcesContent":["import {\r\n  COMPLETE_C_PROFILE_SUCCESS,\r\n  COMPLETE_C_PROFILE_FAIL,\r\n  GET_C_PROFILES_SUCCESS,\r\n  GET_C_PROFILES_FAIL,\r\n} from './types'\r\nimport { firestore } from '../config/firebase'\r\n\r\n/* ============================== */\r\n/* CREATE NEW COMPANY PROFILE */\r\n/* ============================== */\r\nexport const completeCompanyProfile = (data) => async (dispatch) => {\r\n  try {\r\n    firestore.collection('companies').add(data)\r\n    dispatch({\r\n      type: COMPLETE_C_PROFILE_SUCCESS,\r\n      payload: res,\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: COMPLETE_C_PROFILE_FAIL,\r\n    })\r\n  }\r\n}\r\n\r\n/* ============================== */\r\n/* GET ALL COMPANY PROFILES */\r\n/* ============================== */\r\nexport const getAllCompanyProfiles = () => async (dispatch) => {\r\n  try {\r\n    firestore.collection('companies').onSnapshot((snapshot) => {\r\n      const postData = []\r\n      snapshot.forEach((doc) => postData.push({ ...doc.data(), id: doc.id }))\r\n      console.log(postData)\r\n      dispatch({\r\n        type: GET_C_PROFILES_SUCCESS,\r\n        payload: postData,\r\n      })\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_C_PROFILES_FAIL,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}