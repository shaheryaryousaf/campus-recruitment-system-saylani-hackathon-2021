{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_JOB_SUCCESS, ADD_JOB_FAIL, GET_JOBS_SUCCESS, GET_JOBS_FAIL, GET_SINGLE_JOB_SUCCESS, GET_SINGLE_JOB_FAIL } from \"../actions/types\";\nvar initialState = {\n  jobs: [],\n  job: {}\n};\n\nvar Jobs = function Jobs() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case ADD_JOB_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        jobs: [payload].concat(_toConsumableArray(state.jobs))\n      });\n\n    case GET_JOBS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        jobs: payload\n      });\n\n    case GET_SINGLE_JOB_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        job: payload\n      });\n\n    case ADD_JOB_FAIL:\n    case GET_JOBS_FAIL:\n    case GET_SINGLE_JOB_FAIL:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default Jobs;","map":{"version":3,"sources":["H:/React/native/campus-recruitment/app/reducers/Jobs.js"],"names":["ADD_JOB_SUCCESS","ADD_JOB_FAIL","GET_JOBS_SUCCESS","GET_JOBS_FAIL","GET_SINGLE_JOB_SUCCESS","GET_SINGLE_JOB_FAIL","initialState","jobs","job","Jobs","state","action","type","payload"],"mappings":";;;;;;;AAAA,SACEA,eADF,EAEEC,YAFF,EAGEC,gBAHF,EAIEC,aAJF,EAKEC,sBALF,EAMEC,mBANF;AASA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,GAAG,EAAE;AAFc,CAArB;;AAKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AAAA,MACrCC,IADqC,GACnBD,MADmB,CACrCC,IADqC;AAAA,MAC/BC,OAD+B,GACnBF,MADmB,CAC/BE,OAD+B;;AAG7C,UAAQD,IAAR;AACE,SAAKZ,eAAL;AACE,6CACKU,KADL;AAEEH,QAAAA,IAAI,GAAGM,OAAH,4BAAeH,KAAK,CAACH,IAArB;AAFN;;AAIF,SAAKL,gBAAL;AACE,6CACKQ,KADL;AAEEH,QAAAA,IAAI,EAAEM;AAFR;;AAIF,SAAKT,sBAAL;AACE,6CACKM,KADL;AAEEF,QAAAA,GAAG,EAAEK;AAFP;;AAIF,SAAKZ,YAAL;AACA,SAAKE,aAAL;AACA,SAAKE,mBAAL;AACE,+BACKK,KADL;;AAGF;AACE,aAAOA,KAAP;AAvBJ;AAyBD,CA5BD;;AA8BA,eAAeD,IAAf","sourcesContent":["import {\r\n  ADD_JOB_SUCCESS,\r\n  ADD_JOB_FAIL,\r\n  GET_JOBS_SUCCESS,\r\n  GET_JOBS_FAIL,\r\n  GET_SINGLE_JOB_SUCCESS,\r\n  GET_SINGLE_JOB_FAIL,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  jobs: [],\r\n  job: {},\r\n}\r\n\r\nconst Jobs = (state = initialState, action) => {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case ADD_JOB_SUCCESS:\r\n      return {\r\n        ...state,\r\n        jobs: [payload, ...state.jobs],\r\n      }\r\n    case GET_JOBS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        jobs: payload,\r\n      }\r\n    case GET_SINGLE_JOB_SUCCESS:\r\n      return {\r\n        ...state,\r\n        job: payload,\r\n      }\r\n    case ADD_JOB_FAIL:\r\n    case GET_JOBS_FAIL:\r\n    case GET_SINGLE_JOB_FAIL:\r\n      return {\r\n        ...state,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default Jobs\r\n"]},"metadata":{},"sourceType":"module"}