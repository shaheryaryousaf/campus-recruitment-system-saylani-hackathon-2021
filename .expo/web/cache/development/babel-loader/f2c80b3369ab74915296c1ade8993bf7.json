{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"H:\\\\React\\\\native\\\\campus-recruitment\\\\node_modules\\\\react-native-tableview-simple\\\\lib\\\\module\\\\components\\\\Cell.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ThemeContext } from \"./Theme\";\n\nvar Cell = function Cell(_ref) {\n  var _ref$accessory = _ref.accessory,\n      accessory = _ref$accessory === void 0 ? false : _ref$accessory,\n      accessoryColor = _ref.accessoryColor,\n      accessoryColorDisclosureIndicator = _ref.accessoryColorDisclosureIndicator,\n      _ref$allowFontScaling = _ref.allowFontScaling,\n      allowFontScaling = _ref$allowFontScaling === void 0 ? true : _ref$allowFontScaling,\n      backgroundColor = _ref.backgroundColor,\n      _ref$cellStyle = _ref.cellStyle,\n      cellStyle = _ref$cellStyle === void 0 ? 'Basic' : _ref$cellStyle,\n      cellContentView = _ref.cellContentView,\n      cellImageView = _ref.cellImageView,\n      cellAccessoryView = _ref.cellAccessoryView,\n      _ref$contentContainer = _ref.contentContainerStyle,\n      contentContainerStyle = _ref$contentContainer === void 0 ? {} : _ref$contentContainer,\n      detail = _ref.detail,\n      _ref$detailTextStyle = _ref.detailTextStyle,\n      detailTextStyle = _ref$detailTextStyle === void 0 ? {} : _ref$detailTextStyle,\n      _ref$detailTextProps = _ref.detailTextProps,\n      detailTextProps = _ref$detailTextProps === void 0 ? {} : _ref$detailTextProps,\n      _ref$disableImageResi = _ref.disableImageResize,\n      disableImageResize = _ref$disableImageResi === void 0 ? false : _ref$disableImageResi,\n      _ref$highlightActiveO = _ref.highlightActiveOpacity,\n      highlightActiveOpacity = _ref$highlightActiveO === void 0 ? 0.8 : _ref$highlightActiveO,\n      highlightUnderlayColor = _ref.highlightUnderlayColor,\n      image = _ref.image,\n      _ref$isDisabled = _ref.isDisabled,\n      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,\n      onPress = _ref.onPress,\n      onPressDetailAccessory = _ref.onPressDetailAccessory,\n      onHighlightRow = _ref.onHighlightRow,\n      onUnHighlightRow = _ref.onUnHighlightRow,\n      leftDetailColor = _ref.leftDetailColor,\n      rightDetailColor = _ref.rightDetailColor,\n      subtitleColor = _ref.subtitleColor,\n      _ref$subtitleTextStyl = _ref.subtitleTextStyle,\n      subtitleTextStyle = _ref$subtitleTextStyl === void 0 ? {} : _ref$subtitleTextStyl,\n      testID = _ref.testID,\n      title = _ref.title,\n      _ref$titleTextProps = _ref.titleTextProps,\n      titleTextProps = _ref$titleTextProps === void 0 ? {} : _ref$titleTextProps,\n      _ref$titleTextStyle = _ref.titleTextStyle,\n      titleTextStyle = _ref$titleTextStyle === void 0 ? {} : _ref$titleTextStyle,\n      _ref$titleTextStyleDi = _ref.titleTextStyleDisabled,\n      titleTextStyleDisabled = _ref$titleTextStyleDi === void 0 ? {} : _ref$titleTextStyleDi,\n      titleTextColor = _ref.titleTextColor,\n      _ref$withSafeAreaView = _ref.withSafeAreaView,\n      withSafeAreaView = _ref$withSafeAreaView === void 0 ? Platform.OS === 'ios' ? parseInt(\"\" + Platform.Version, 10) <= 10 ? false : true : true : _ref$withSafeAreaView;\n  var theme = useContext(ThemeContext);\n  var isPressable = !!onPress;\n\n  var localStyles = _objectSpread(_objectSpread({}, styles), {}, {\n    cell: [styles.cell, {\n      backgroundColor: backgroundColor || theme.colors.background\n    }, contentContainerStyle],\n    cellSafeAreaContainer: [styles.cellSafeAreaContainer, {\n      backgroundColor: backgroundColor || theme.colors.background\n    }],\n    cellTitle: isDisabled ? [styles.cellTitle, styles.cellTextDisabled, titleTextStyleDisabled] : [styles.cellTitle, {\n      color: titleTextColor || theme.colors.body\n    }, titleTextStyle],\n    cellLeftDetail: [styles.cellLeftDetail, {\n      color: leftDetailColor || theme.colors.primary\n    }, detailTextStyle],\n    cellLeftDetailTitle: isDisabled ? [styles.cellLeftDetailTitle, styles.cellTextDisabled] : [styles.cellLeftDetailTitle, {\n      color: titleTextColor || theme.colors.body\n    }],\n    cellRightDetail: [styles.cellRightDetail, {\n      color: rightDetailColor || theme.colors.secondary\n    }, detailTextStyle],\n    cellSubtitle: [styles.cellSubtitle, {\n      color: subtitleColor || theme.colors.body\n    }, subtitleTextStyle],\n    accessoryCheckmark: [styles.accessoryCheckmark, {\n      borderColor: accessoryColor || theme.colors.primary\n    }],\n    accessoryDetail: [styles.accessoryDetail, {\n      borderColor: accessoryColor || theme.colors.primary\n    }],\n    accessoryDetailText: [styles.accessoryDetailText, {\n      color: accessoryColor || theme.colors.primary\n    }],\n    accessoryDisclosureIndicator: [styles.accessoryDisclosureIndicator, {\n      borderColor: accessoryColorDisclosureIndicator || theme.colors.muted\n    }]\n  });\n\n  var renderAccessoryDetail = function renderAccessoryDetail() {\n    if (onPressDetailAccessory) {\n      return React.createElement(TouchableOpacity, {\n        style: localStyles.accessoryDetail,\n        onPress: onPressDetailAccessory,\n        activeOpacity: 0.7,\n        disabled: isDisabled,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: localStyles.accessoryDetailText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"i\"));\n    }\n\n    return React.createElement(View, {\n      style: localStyles.accessoryDetail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: localStyles.accessoryDetailText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"i\"));\n  };\n\n  var renderAccessoryView = function renderAccessoryView() {\n    switch (accessory) {\n      case 'DisclosureIndicator':\n        return React.createElement(View, {\n          style: localStyles.cellAccessoryView,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: localStyles.accessoryDisclosureIndicator,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        }));\n\n      case 'Detail':\n        return React.createElement(View, {\n          style: localStyles.cellAccessoryView,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }\n        }, renderAccessoryDetail());\n\n      case 'DetailDisclosure':\n        return React.createElement(View, {\n          style: localStyles.cellAccessoryView,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: localStyles.accessoryDetailDisclosure,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        }, renderAccessoryDetail(), React.createElement(View, {\n          style: localStyles.accessoryDisclosureIndicator,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }\n        })));\n\n      case 'Checkmark':\n        return React.createElement(View, {\n          style: localStyles.cellAccessoryView,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: localStyles.accessoryCheckmark,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        }));\n\n      default:\n        return null;\n    }\n  };\n\n  var renderImageView = function renderImageView() {\n    var _image$props;\n\n    if (!image) {\n      return null;\n    }\n\n    var imageStyleProp = image == null ? void 0 : (_image$props = image.props) == null ? void 0 : _image$props.style;\n    var propsToAdd = {\n      style: disableImageResize ? imageStyleProp : [imageStyleProp, localStyles.image]\n    };\n    return React.createElement(View, {\n      style: localStyles.cellImageView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, React.cloneElement(image, propsToAdd));\n  };\n\n  var renderCellBasic = function renderCellBasic() {\n    return React.createElement(View, {\n      style: localStyles.cellContentView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 36\n      }\n    }, React.createElement(Text, _extends({\n      allowFontScaling: allowFontScaling,\n      numberOfLines: 1,\n      style: localStyles.cellTitle\n    }, titleTextProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }), title));\n  };\n\n  var renderCellRightDetail = function renderCellRightDetail() {\n    return React.createElement(View, {\n      style: localStyles.cellContentView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 42\n      }\n    }, React.createElement(Text, _extends({\n      allowFontScaling: allowFontScaling,\n      numberOfLines: 1,\n      style: localStyles.cellTitle\n    }, titleTextProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }), title), React.createElement(Text, _extends({\n      allowFontScaling: allowFontScaling,\n      numberOfLines: 1,\n      style: isDisabled ? [localStyles.cellRightDetail, localStyles.cellTextDisabled] : localStyles.cellRightDetail\n    }, detailTextProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }), detail));\n  };\n\n  var renderCellLeftDetail = function renderCellLeftDetail() {\n    return React.createElement(View, {\n      style: localStyles.cellContentView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    }, React.createElement(Text, _extends({\n      allowFontScaling: allowFontScaling,\n      numberOfLines: 1,\n      style: isDisabled ? [localStyles.cellLeftDetail, localStyles.cellTextDisabled] : localStyles.cellLeftDetail\n    }, detailTextProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }), detail), React.createElement(Text, _extends({\n      allowFontScaling: allowFontScaling,\n      numberOfLines: 1,\n      style: localStyles.cellLeftDetailTitle\n    }, titleTextProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }), title));\n  };\n\n  var renderCellSubtitle = function renderCellSubtitle() {\n    return React.createElement(View, {\n      style: [localStyles.cellContentView, localStyles.cellContentViewTypeSubtitle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 39\n      }\n    }, React.createElement(View, {\n      style: localStyles.cellInnerSubtitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, _extends({\n      allowFontScaling: allowFontScaling,\n      numberOfLines: 1,\n      style: localStyles.cellTitle\n    }, titleTextProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }), title), React.createElement(Text, _extends({\n      allowFontScaling: allowFontScaling,\n      numberOfLines: 1,\n      style: isDisabled ? [localStyles.cellSubtitle, localStyles.cellTextDisabled] : localStyles.cellSubtitle\n    }, detailTextProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }), detail)));\n  };\n\n  var renderCellContentView = function renderCellContentView() {\n    switch (cellStyle) {\n      case 'Basic':\n        return renderCellBasic();\n\n      case 'RightDetail':\n        return renderCellRightDetail();\n\n      case 'LeftDetail':\n        return renderCellLeftDetail();\n\n      case 'Subtitle':\n        return renderCellSubtitle();\n\n      default:\n        return renderCellBasic();\n    }\n  };\n\n  var renderCell = function renderCell() {\n    return React.createElement(View, {\n      style: localStyles.cell,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 31\n      }\n    }, cellImageView || renderImageView(), cellContentView || renderCellContentView(), cellAccessoryView || renderAccessoryView());\n  };\n\n  var renderCellWithSafeAreaView = function renderCellWithSafeAreaView() {\n    return React.createElement(SafeAreaView, {\n      style: localStyles.cellSafeAreaContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 47\n      }\n    }, React.createElement(View, {\n      style: localStyles.cell,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, cellImageView || renderImageView(), cellContentView || renderCellContentView(), cellAccessoryView || renderAccessoryView()));\n  };\n\n  if (isPressable && !isDisabled) {\n    return React.createElement(TouchableHighlight, {\n      activeOpacity: highlightActiveOpacity,\n      onPress: onPress,\n      underlayColor: highlightUnderlayColor || theme.colors.body,\n      onPressIn: onHighlightRow,\n      onPressOut: onUnHighlightRow,\n      testID: testID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, withSafeAreaView ? renderCellWithSafeAreaView() : renderCell());\n  }\n\n  return React.createElement(View, {\n    testID: testID,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, withSafeAreaView ? renderCellWithSafeAreaView() : renderCell());\n};\n\nvar styles = StyleSheet.create({\n  cell: {\n    alignItems: 'center',\n    paddingLeft: 15,\n    paddingRight: 20,\n    minHeight: 44,\n    flexDirection: 'row'\n  },\n  cellSafeAreaContainer: {\n    flexGrow: 1\n  },\n  cellContentView: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    flexGrow: 1,\n    flexBasis: 0,\n    justifyContent: 'center',\n    paddingVertical: 10\n  },\n  cellContentViewTypeSubtitle: {\n    paddingVertical: 4\n  },\n  cellInnerSubtitle: {\n    flexDirection: 'column',\n    flexGrow: 1\n  },\n  cellTitle: {\n    fontSize: 16,\n    letterSpacing: -0.32,\n    flexGrow: 1\n  },\n  cellLeftDetailTitle: {\n    fontSize: 12,\n    flexGrow: 1\n  },\n  cellLeftDetail: {\n    fontSize: 12,\n    alignSelf: 'center',\n    textAlign: 'right',\n    marginRight: 5,\n    width: 75\n  },\n  cellRightDetail: {\n    fontSize: 16,\n    letterSpacing: -0.32,\n    alignSelf: 'center',\n    color: '#8E8E93'\n  },\n  cellSubtitle: {\n    fontSize: 11,\n    letterSpacing: 0.066\n  },\n  cellTextDisabled: {\n    color: 'gray'\n  },\n  cellImageView: {\n    justifyContent: 'center',\n    marginRight: 15\n  },\n  image: {\n    height: 29,\n    width: 29\n  },\n  cellAccessoryView: {\n    justifyContent: 'center'\n  },\n  accessoryDisclosureIndicator: {\n    width: 10,\n    height: 10,\n    marginLeft: 7,\n    backgroundColor: 'transparent',\n    borderTopWidth: 1,\n    borderRightWidth: 1,\n    borderColor: '#c7c7cc',\n    transform: [{\n      rotate: '45deg'\n    }]\n  },\n  accessoryDetail: {\n    width: 20,\n    height: 20,\n    marginLeft: 10,\n    backgroundColor: 'transparent',\n    borderWidth: 1,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  accessoryDetailText: {\n    fontSize: 15,\n    fontWeight: '400',\n    fontFamily: 'Georgia',\n    letterSpacing: -0.24\n  },\n  accessoryDetailDisclosure: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  accessoryCheckmark: {\n    width: 13,\n    height: 6,\n    marginLeft: 7,\n    backgroundColor: 'transparent',\n    borderBottomWidth: 2,\n    borderLeftWidth: 2,\n    borderColor: '#007AFF',\n    transform: [{\n      rotate: '-45deg'\n    }]\n  }\n});\nexport default Cell;","map":{"version":3,"sources":["../../../src/components/Cell.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useContext } from 'react';\nimport { Platform, SafeAreaView, StyleSheet, Text, TouchableHighlight, TouchableOpacity, View, } from 'react-native';\nimport { ThemeContext } from './Theme';\nconst Cell = ({ accessory = false, accessoryColor, accessoryColorDisclosureIndicator, allowFontScaling = true, backgroundColor, cellStyle = 'Basic', cellContentView, cellImageView, cellAccessoryView, contentContainerStyle = {}, detail, detailTextStyle = {}, detailTextProps = {}, disableImageResize = false, highlightActiveOpacity = 0.8, highlightUnderlayColor, image, isDisabled = false, onPress, onPressDetailAccessory, onHighlightRow, onUnHighlightRow, leftDetailColor, rightDetailColor, subtitleColor, subtitleTextStyle = {}, testID, title, titleTextProps = {}, titleTextStyle = {}, titleTextStyleDisabled = {}, titleTextColor, withSafeAreaView = Platform.OS === 'ios'\n    ? parseInt(`${Platform.Version}`, 10) <= 10\n        ? false\n        : true\n    : true, }) => {\n    const theme = useContext(ThemeContext);\n    const isPressable = !!onPress;\n    /**\n     * Merge styles with props\n     * Type is a Hotfix\n     */\n    const localStyles = {\n        ...styles,\n        cell: [\n            styles.cell,\n            {\n                backgroundColor: backgroundColor || theme.colors.background,\n            },\n            contentContainerStyle,\n        ],\n        cellSafeAreaContainer: [\n            styles.cellSafeAreaContainer,\n            {\n                backgroundColor: backgroundColor || theme.colors.background,\n            },\n        ],\n        cellTitle: isDisabled\n            ? [styles.cellTitle, styles.cellTextDisabled, titleTextStyleDisabled]\n            : [\n                styles.cellTitle,\n                { color: titleTextColor || theme.colors.body },\n                titleTextStyle,\n            ],\n        cellLeftDetail: [\n            styles.cellLeftDetail,\n            {\n                color: leftDetailColor || theme.colors.primary,\n            },\n            detailTextStyle,\n        ],\n        cellLeftDetailTitle: isDisabled\n            ? [styles.cellLeftDetailTitle, styles.cellTextDisabled]\n            : [\n                styles.cellLeftDetailTitle,\n                { color: titleTextColor || theme.colors.body },\n            ],\n        cellRightDetail: [\n            styles.cellRightDetail,\n            {\n                color: rightDetailColor || theme.colors.secondary,\n            },\n            detailTextStyle,\n        ],\n        cellSubtitle: [\n            styles.cellSubtitle,\n            {\n                color: subtitleColor || theme.colors.body,\n            },\n            subtitleTextStyle,\n        ],\n        accessoryCheckmark: [\n            styles.accessoryCheckmark,\n            { borderColor: accessoryColor || theme.colors.primary },\n        ],\n        accessoryDetail: [\n            styles.accessoryDetail,\n            { borderColor: accessoryColor || theme.colors.primary },\n        ],\n        accessoryDetailText: [\n            styles.accessoryDetailText,\n            { color: accessoryColor || theme.colors.primary },\n        ],\n        accessoryDisclosureIndicator: [\n            styles.accessoryDisclosureIndicator,\n            { borderColor: accessoryColorDisclosureIndicator || theme.colors.muted },\n        ],\n    };\n    const renderAccessoryDetail = () => {\n        if (onPressDetailAccessory) {\n            return (<TouchableOpacity style={localStyles.accessoryDetail} onPress={onPressDetailAccessory} activeOpacity={0.7} disabled={isDisabled}>\n          <Text style={localStyles.accessoryDetailText}>i</Text>\n        </TouchableOpacity>);\n        }\n        return (<View style={localStyles.accessoryDetail}>\n        <Text style={localStyles.accessoryDetailText}>i</Text>\n      </View>);\n    };\n    /**\n     * Render accessoryView\n     * Currently available\n     * @return {View} View with accessory\n     */\n    const renderAccessoryView = () => {\n        switch (accessory) {\n            case 'DisclosureIndicator':\n                return (<View style={localStyles.cellAccessoryView}>\n            <View style={localStyles.accessoryDisclosureIndicator}/>\n          </View>);\n            case 'Detail':\n                return (<View style={localStyles.cellAccessoryView}>\n            {renderAccessoryDetail()}\n          </View>);\n            case 'DetailDisclosure':\n                return (<View style={localStyles.cellAccessoryView}>\n            <View style={localStyles.accessoryDetailDisclosure}>\n              {renderAccessoryDetail()}\n              <View style={localStyles.accessoryDisclosureIndicator}/>\n            </View>\n          </View>);\n            case 'Checkmark':\n                return (<View style={localStyles.cellAccessoryView}>\n            <View style={localStyles.accessoryCheckmark}/>\n          </View>);\n            default:\n                return null;\n        }\n    };\n    /**\n     * Render imageView\n     * @return {Image} Image component with updated props\n     */\n    const renderImageView = () => {\n        if (!image) {\n            return null;\n        }\n        const imageStyleProp = image?.props?.style;\n        const propsToAdd = {\n            style: disableImageResize\n                ? imageStyleProp\n                : [imageStyleProp, localStyles.image],\n        };\n        return (<View style={localStyles.cellImageView}>\n        {React.cloneElement(image, propsToAdd)}\n      </View>);\n    };\n    /**\n     * Render cell of type Basic\n     * @return {View} View with Text and Accessory\n     */\n    const renderCellBasic = () => (<View style={localStyles.cellContentView}>\n      <Text allowFontScaling={allowFontScaling} numberOfLines={1} style={localStyles.cellTitle} {...titleTextProps}>\n        {title}\n      </Text>\n    </View>);\n    /**\n     * Render cell of type RightDetail\n     * @return {View} View with Text, Text and Accessory\n     */\n    const renderCellRightDetail = () => (<View style={localStyles.cellContentView}>\n      <Text allowFontScaling={allowFontScaling} numberOfLines={1} style={localStyles.cellTitle} {...titleTextProps}>\n        {title}\n      </Text>\n      <Text allowFontScaling={allowFontScaling} numberOfLines={1} style={isDisabled\n        ? [localStyles.cellRightDetail, localStyles.cellTextDisabled]\n        : localStyles.cellRightDetail} {...detailTextProps}>\n        {detail}\n      </Text>\n    </View>);\n    /**\n     * Render cell of type LeftDetail\n     * @return {View} View with Text, Text and Accessory\n     */\n    const renderCellLeftDetail = () => (<View style={localStyles.cellContentView}>\n      <Text allowFontScaling={allowFontScaling} numberOfLines={1} style={isDisabled\n        ? [localStyles.cellLeftDetail, localStyles.cellTextDisabled]\n        : localStyles.cellLeftDetail} {...detailTextProps}>\n        {detail}\n      </Text>\n      <Text allowFontScaling={allowFontScaling} numberOfLines={1} style={localStyles.cellLeftDetailTitle} {...titleTextProps}>\n        {title}\n      </Text>\n    </View>);\n    /**\n     * Render cell of type Subtitle\n     * @return {View} View with View, Text, Text and Accessory\n     */\n    const renderCellSubtitle = () => (<View style={[\n        localStyles.cellContentView,\n        localStyles.cellContentViewTypeSubtitle,\n    ]}>\n      <View style={localStyles.cellInnerSubtitle}>\n        <Text allowFontScaling={allowFontScaling} numberOfLines={1} style={localStyles.cellTitle} {...titleTextProps}>\n          {title}\n        </Text>\n        <Text allowFontScaling={allowFontScaling} numberOfLines={1} style={isDisabled\n        ? [localStyles.cellSubtitle, localStyles.cellTextDisabled]\n        : localStyles.cellSubtitle} {...detailTextProps}>\n          {detail}\n        </Text>\n      </View>\n    </View>);\n    /**\n     * Renders correct contentView\n     * @return {View} ContentView\n     */\n    const renderCellContentView = () => {\n        switch (cellStyle) {\n            case 'Basic':\n                return renderCellBasic();\n            case 'RightDetail':\n                return renderCellRightDetail();\n            case 'LeftDetail':\n                return renderCellLeftDetail();\n            case 'Subtitle':\n                return renderCellSubtitle();\n            default:\n                return renderCellBasic();\n        }\n    };\n    /**\n     * Render content of cell\n     * @return {View} Complete View with cell elements\n     */\n    const renderCell = () => (<View style={localStyles.cell}>\n      {cellImageView || renderImageView()}\n      {cellContentView || renderCellContentView()}\n      {cellAccessoryView || renderAccessoryView()}\n    </View>);\n    /**\n     * Render content of cell with SafeAreaView\n     * Inside view to prevent overwriting styles\n     * @return {View} Complete View with cell elements\n     */\n    const renderCellWithSafeAreaView = () => (<SafeAreaView style={localStyles.cellSafeAreaContainer}>\n      <View style={localStyles.cell}>\n        {cellImageView || renderImageView()}\n        {cellContentView || renderCellContentView()}\n        {cellAccessoryView || renderAccessoryView()}\n      </View>\n    </SafeAreaView>);\n    if (isPressable && !isDisabled) {\n        return (<TouchableHighlight activeOpacity={highlightActiveOpacity} onPress={onPress} underlayColor={highlightUnderlayColor || theme.colors.body} onPressIn={onHighlightRow} onPressOut={onUnHighlightRow} testID={testID}>\n        {withSafeAreaView ? renderCellWithSafeAreaView() : renderCell()}\n      </TouchableHighlight>);\n    }\n    return (<View testID={testID}>\n      {withSafeAreaView ? renderCellWithSafeAreaView() : renderCell()}\n    </View>);\n};\nconst styles = StyleSheet.create({\n    cell: {\n        alignItems: 'center',\n        paddingLeft: 15,\n        paddingRight: 20,\n        minHeight: 44,\n        flexDirection: 'row',\n    },\n    // SafeAreaView only adds padding\n    cellSafeAreaContainer: {\n        flexGrow: 1,\n    },\n    cellContentView: {\n        alignItems: 'center',\n        flexDirection: 'row',\n        flexGrow: 1,\n        flexBasis: 0,\n        justifyContent: 'center',\n        // independent from other cellViews\n        paddingVertical: 10,\n    },\n    cellContentViewTypeSubtitle: {\n        paddingVertical: 4,\n    },\n    cellInnerSubtitle: {\n        flexDirection: 'column',\n        flexGrow: 1,\n    },\n    cellTitle: {\n        fontSize: 16,\n        letterSpacing: -0.32,\n        flexGrow: 1,\n    },\n    cellLeftDetailTitle: {\n        fontSize: 12,\n        flexGrow: 1,\n    },\n    cellLeftDetail: {\n        fontSize: 12,\n        alignSelf: 'center',\n        textAlign: 'right',\n        marginRight: 5,\n        width: 75,\n    },\n    cellRightDetail: {\n        fontSize: 16,\n        letterSpacing: -0.32,\n        alignSelf: 'center',\n        color: '#8E8E93',\n    },\n    cellSubtitle: {\n        fontSize: 11,\n        letterSpacing: 0.066,\n    },\n    cellTextDisabled: {\n        color: 'gray',\n    },\n    cellImageView: {\n        justifyContent: 'center',\n        marginRight: 15,\n    },\n    image: {\n        height: 29,\n        width: 29,\n    },\n    cellAccessoryView: {\n        justifyContent: 'center',\n    },\n    accessoryDisclosureIndicator: {\n        width: 10,\n        height: 10,\n        marginLeft: 7,\n        backgroundColor: 'transparent',\n        borderTopWidth: 1,\n        borderRightWidth: 1,\n        borderColor: '#c7c7cc',\n        transform: [\n            {\n                rotate: '45deg',\n            },\n        ],\n    },\n    accessoryDetail: {\n        width: 20,\n        height: 20,\n        marginLeft: 10,\n        backgroundColor: 'transparent',\n        borderWidth: 1,\n        borderRadius: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    accessoryDetailText: {\n        fontSize: 15,\n        fontWeight: '400',\n        fontFamily: 'Georgia',\n        letterSpacing: -0.24,\n    },\n    accessoryDetailDisclosure: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    accessoryCheckmark: {\n        width: 13,\n        height: 6,\n        marginLeft: 7,\n        backgroundColor: 'transparent',\n        borderBottomWidth: 2,\n        borderLeftWidth: 2,\n        borderColor: '#007AFF',\n        transform: [\n            {\n                rotate: '-45deg',\n            },\n        ],\n    },\n});\nexport default Cell;\n//# sourceMappingURL=Cell.js.map"]},"metadata":{},"sourceType":"module"}