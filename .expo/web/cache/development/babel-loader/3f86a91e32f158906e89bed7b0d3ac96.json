{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { REGISTRATION_SUCCESS, REGISTRATION_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, GET_PROFILE_SUCCESS, GET_PROFILE_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL } from \"./types\";\nimport { auth, firebase2, db, firestore } from \"../config/firebase\";\n\nvar getCookie = function getCookie(name) {\n  var cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n};\n\nexport var setLoading = function setLoading() {\n  return function (dispatch) {\n    dispatch({\n      type: SET_AUTH_LOADING\n    });\n  };\n};\nexport var checkAuthenticated = function checkAuthenticated() {\n  return function _callee(dispatch) {\n    var config, body, res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!localStorage.getItem('access')) {\n              _context.next = 15;\n              break;\n            }\n\n            config = {\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n              }\n            };\n            body = JSON.stringify({\n              token: localStorage.getItem('access')\n            });\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(process.env.REACT_APP_API_URL + \"/auth/jwt/verify/\", body, config));\n\n          case 6:\n            res = _context.sent;\n\n            if (res.data.code !== 'token_not_valid') {\n              dispatch({\n                type: AUTHENTICATED_SUCCESS\n              });\n            } else {\n              dispatch({\n                type: AUTHENTICATED_FAIL\n              });\n            }\n\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            dispatch({\n              type: AUTHENTICATED_FAIL\n            });\n\n          case 13:\n            _context.next = 16;\n            break;\n\n          case 15:\n            dispatch({\n              type: AUTHENTICATED_FAIL\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n};\nexport var load_user = function load_user() {\n  return function _callee2(dispatch) {\n    var config, res;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!localStorage.getItem('access')) {\n              _context2.next = 14;\n              break;\n            }\n\n            config = {\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: \"JWT \" + localStorage.getItem('access'),\n                Accept: 'application/json'\n              }\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(process.env.REACT_APP_API_URL + \"/auth/users/me/\", config));\n\n          case 5:\n            res = _context2.sent;\n            dispatch({\n              type: USER_LOADED_SUCCESS,\n              payload: res.data\n            });\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            dispatch({\n              type: USER_LOADED_FAIL\n            });\n\n          case 12:\n            _context2.next = 15;\n            break;\n\n          case 14:\n            dispatch({\n              type: USER_LOADED_FAIL\n            });\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  };\n};\nexport var registerUser = function registerUser(username, email, password, password2, type) {\n  return function _callee3(dispatch) {\n    var errorCode, errorMessage;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n\n            if (!(password !== password2)) {\n              _context3.next = 4;\n              break;\n            }\n\n            alert(\"Passwords don't match.\");\n            return _context3.abrupt(\"return\");\n\n          case 4:\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(firebase2.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n              var uid = response.user.uid;\n              var data = {\n                id: uid,\n                email: email,\n                username: username,\n                type: type\n              };\n              var usersRef = firestore.collection('profiles');\n              usersRef.doc(uid).set(data).then(function () {\n                console.log(response);\n              }).catch(function (error) {\n                alert(error);\n              });\n            }).catch(function (error) {\n              alert(error);\n            }));\n\n          case 6:\n            _context3.next = 15;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            errorCode = _context3.t0.code;\n            errorMessage = _context3.t0.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n            dispatch({\n              type: REGISTRATION_FAIL\n            });\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\nexport var login = function login(email, password) {\n  return function _callee4(dispatch) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(firebase2.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n              var uid = response.user.uid;\n              var usersRef = firestore.collection('profiles');\n              usersRef.doc(uid).get().then(function (userData) {\n                if (!userData.exists) {\n                  alert('User does not exist anymore.');\n                  return;\n                }\n\n                var user = userData.data();\n                dispatch({\n                  type: LOGIN_SUCCESS,\n                  payload: response.user\n                });\n              }).catch(function (error) {\n                alert(error);\n              });\n            }).catch(function (error) {\n              alert(error);\n            }));\n\n          case 3:\n            _context4.next = 9;\n            break;\n\n          case 5:\n            _context4.prev = 5;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n            dispatch({\n              type: LOGIN_FAIL\n            });\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n};\nexport var getProfile = function getProfile(data) {\n  return function _callee5(dispatch) {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            try {\n              firestore.collection('profiles').doc(data).get().then(function (doc) {\n                if (doc.exists) {\n                  dispatch({\n                    type: GET_PROFILE_SUCCESS,\n                    payload: doc.data()\n                  });\n                } else {\n                  dispatch({\n                    type: GET_PROFILE_FAIL\n                  });\n                }\n              }).catch(function (error) {\n                console.log('Error getting document:', error);\n              });\n            } catch (err) {\n              dispatch({\n                type: GET_PROFILE_FAIL\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["H:/React/native/campus-recruitment/app/actions/auth.js"],"names":["REGISTRATION_SUCCESS","REGISTRATION_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","GET_PROFILE_SUCCESS","GET_PROFILE_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","auth","firebase2","db","firestore","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","setLoading","dispatch","type","SET_AUTH_LOADING","checkAuthenticated","localStorage","getItem","config","headers","Accept","body","JSON","stringify","token","axios","post","process","env","REACT_APP_API_URL","res","data","code","load_user","Authorization","get","payload","registerUser","username","email","password","password2","alert","createUserWithEmailAndPassword","then","response","uid","user","id","usersRef","collection","doc","set","console","log","catch","error","errorCode","errorMessage","message","login","signInWithEmailAndPassword","userData","exists","getProfile","err"],"mappings":"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","sourcesContent":["import {\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n} from './types'\r\nimport { auth, firebase2, db, firestore } from '../config/firebase'\r\n\r\n// ========================================\r\n// Get Browser Cookies\r\n// ========================================\r\nconst getCookie = (name) => {\r\n  var cookieValue = null\r\n  if (document.cookie && document.cookie !== '') {\r\n    var cookies = document.cookie.split(';')\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim()\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + '=') {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1))\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return cookieValue\r\n}\r\n\r\n// ========================================\r\n// Set Loading Function\r\n// ========================================\r\nexport const setLoading = () => (dispatch) => {\r\n  dispatch({\r\n    type: SET_AUTH_LOADING,\r\n  })\r\n}\r\n\r\n// ========================================\r\n// Check if User is Authenticated or Not\r\n// ========================================\r\nexport const checkAuthenticated = () => async (dispatch) => {\r\n  if (localStorage.getItem('access')) {\r\n    const config = {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json;charset=UTF-8',\r\n      },\r\n    }\r\n\r\n    const body = JSON.stringify({ token: localStorage.getItem('access') })\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\r\n        body,\r\n        config\r\n      )\r\n\r\n      if (res.data.code !== 'token_not_valid') {\r\n        dispatch({\r\n          type: AUTHENTICATED_SUCCESS,\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: AUTHENTICATED_FAIL,\r\n        })\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTHENTICATED_FAIL,\r\n      })\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: AUTHENTICATED_FAIL,\r\n    })\r\n  }\r\n}\r\n\r\n// ========================================\r\n// Load Logged In User\r\n// ========================================\r\nexport const load_user = () => async (dispatch) => {\r\n  if (localStorage.getItem('access')) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `JWT ${localStorage.getItem('access')}`,\r\n        Accept: 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\r\n        config\r\n      )\r\n      dispatch({\r\n        type: USER_LOADED_SUCCESS,\r\n        payload: res.data,\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: USER_LOADED_FAIL,\r\n      })\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: USER_LOADED_FAIL,\r\n    })\r\n  }\r\n}\r\n\r\nexport const registerUser = (\r\n  username,\r\n  email,\r\n  password,\r\n  password2,\r\n  type\r\n) => async (dispatch) => {\r\n  try {\r\n    if (password !== password2) {\r\n      alert(\"Passwords don't match.\")\r\n      return\r\n    }\r\n    await firebase2\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        const uid = response.user.uid\r\n        const data = {\r\n          id: uid,\r\n          email,\r\n          username,\r\n          type,\r\n        }\r\n        const usersRef = firestore.collection('profiles')\r\n        usersRef\r\n          .doc(uid)\r\n          .set(data)\r\n          .then(() => {\r\n            console.log(response)\r\n          })\r\n          .catch((error) => {\r\n            alert(error)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        alert(error)\r\n      })\r\n  } catch (error) {\r\n    var errorCode = error.code\r\n    var errorMessage = error.message\r\n    console.log(errorCode)\r\n    console.log(errorMessage)\r\n    dispatch({\r\n      type: REGISTRATION_FAIL,\r\n    })\r\n  }\r\n}\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    await firebase2\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        const uid = response.user.uid\r\n        const usersRef = firestore.collection('profiles')\r\n        usersRef\r\n          .doc(uid)\r\n          .get()\r\n          .then((userData) => {\r\n            if (!userData.exists) {\r\n              alert('User does not exist anymore.')\r\n              return\r\n            }\r\n            const user = userData.data()\r\n            dispatch({\r\n              type: LOGIN_SUCCESS,\r\n              payload: response.user,\r\n            })\r\n          })\r\n          .catch((error) => {\r\n            alert(error)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        alert(error)\r\n      })\r\n  } catch (error) {\r\n    console.log(error)\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getProfile = (data) => async (dispatch) => {\r\n  try {\r\n    firestore\r\n      .collection('profiles')\r\n      .doc(data)\r\n      .get()\r\n      .then(function (doc) {\r\n        if (doc.exists) {\r\n          dispatch({\r\n            type: GET_PROFILE_SUCCESS,\r\n            payload: doc.data(),\r\n          })\r\n        } else {\r\n          dispatch({\r\n            type: GET_PROFILE_FAIL,\r\n          })\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting document:', error)\r\n      })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_PROFILE_FAIL,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}