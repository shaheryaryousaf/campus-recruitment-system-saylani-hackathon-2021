{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { COMPLETE_S_PROFILE_SUCCESS, COMPLETE_S_PROFILE_FAIL } from \"./types\";\nimport { firestore } from \"../config/firebase\";\nexport var completeStudentProfile = function completeStudentProfile(data) {\n  return function _callee(dispatch) {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(data.student_id);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebafirestorese.collection('cities').add({\n              student_id: data.student_id,\n              first_name: data.first_name,\n              lat_name: data.lat_name,\n              about: data.about,\n              dob: data.dob,\n              phone: data.phone,\n              address: data.address,\n              city: data.city,\n              state: data.state,\n              current_degree: data.current_degree,\n              admission_date: data.admission_date\n            }));\n\n          case 4:\n            res = _context.sent;\n            firestore.collection('profiles').doc('data.student_id').set(data);\n            dispatch({\n              type: COMPLETE_S_PROFILE_SUCCESS,\n              payload: res\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch({\n              type: COMPLETE_S_PROFILE_FAIL\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n};","map":{"version":3,"sources":["H:/React/native/campus-recruitment/app/actions/students.js"],"names":["COMPLETE_S_PROFILE_SUCCESS","COMPLETE_S_PROFILE_FAIL","firestore","completeStudentProfile","data","dispatch","console","log","student_id","firebafirestorese","collection","add","first_name","lat_name","about","dob","phone","address","city","state","current_degree","admission_date","res","doc","set","type","payload"],"mappings":";AAAA,SAASA,0BAAT,EAAqCC,uBAArC;AACA,SAASC,SAAT;AAKA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD;AAAA,SAAU,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9CC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,UAAjB;AAD8C;AAAA;AAAA,6CAG1BC,iBAAiB,CAACC,UAAlB,CAA6B,QAA7B,EAAuCC,GAAvC,CAA2C;AAC3DH,cAAAA,UAAU,EAAEJ,IAAI,CAACI,UAD0C;AAE3DI,cAAAA,UAAU,EAAER,IAAI,CAACQ,UAF0C;AAG3DC,cAAAA,QAAQ,EAAET,IAAI,CAACS,QAH4C;AAI3DC,cAAAA,KAAK,EAAEV,IAAI,CAACU,KAJ+C;AAK3DC,cAAAA,GAAG,EAAEX,IAAI,CAACW,GALiD;AAM3DC,cAAAA,KAAK,EAAEZ,IAAI,CAACY,KAN+C;AAO3DC,cAAAA,OAAO,EAAEb,IAAI,CAACa,OAP6C;AAQ3DC,cAAAA,IAAI,EAAEd,IAAI,CAACc,IARgD;AAS3DC,cAAAA,KAAK,EAAEf,IAAI,CAACe,KAT+C;AAU3DC,cAAAA,cAAc,EAAEhB,IAAI,CAACgB,cAVsC;AAW3DC,cAAAA,cAAc,EAAEjB,IAAI,CAACiB;AAXsC,aAA3C,CAH0B;;AAAA;AAGtCC,YAAAA,GAHsC;AAgB5CpB,YAAAA,SAAS,CAACQ,UAAV,CAAqB,UAArB,EAAiCa,GAAjC,CAAqC,iBAArC,EAAwDC,GAAxD,CAA4DpB,IAA5D;AAcAC,YAAAA,QAAQ,CAAC;AACPoB,cAAAA,IAAI,EAAEzB,0BADC;AAEP0B,cAAAA,OAAO,EAAEJ;AAFF,aAAD,CAAR;AA9B4C;AAAA;;AAAA;AAAA;AAAA;AAmC5CjB,YAAAA,QAAQ,CAAC;AACPoB,cAAAA,IAAI,EAAExB;AADC,aAAD,CAAR;;AAnC4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAAA,CAA/B","sourcesContent":["import { COMPLETE_S_PROFILE_SUCCESS, COMPLETE_S_PROFILE_FAIL } from './types'\r\nimport { firestore } from '../config/firebase'\r\n\r\n/* ============================== */\r\n/* CREATE NEW USER PROFILE */\r\n/* ============================== */\r\nexport const completeStudentProfile = (data) => async (dispatch) => {\r\n  console.log(data.student_id)\r\n  try {\r\n    const res = await firebafirestorese.collection('cities').add({\r\n      student_id: data.student_id,\r\n      first_name: data.first_name,\r\n      lat_name: data.lat_name,\r\n      about: data.about,\r\n      dob: data.dob,\r\n      phone: data.phone,\r\n      address: data.address,\r\n      city: data.city,\r\n      state: data.state,\r\n      current_degree: data.current_degree,\r\n      admission_date: data.admission_date,\r\n    })\r\n    firestore.collection('profiles').doc('data.student_id').set(data)\r\n    // firestore.collection('profiles').doc(data.id).update({\r\n    //   student_id: data.student_id,\r\n    //   first_name: data.first_name,\r\n    //   lat_name: data.lat_name,\r\n    //   about: data.about,\r\n    //   dob: data.dob,\r\n    //   phone: data.phone,\r\n    //   address: data.address,\r\n    //   city: data.city,\r\n    //   state: data.state,\r\n    //   current_degree: data.current_degree,\r\n    //   admission_date: data.admission_date,\r\n    // })\r\n    dispatch({\r\n      type: COMPLETE_S_PROFILE_SUCCESS,\r\n      payload: res,\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: COMPLETE_S_PROFILE_FAIL,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}