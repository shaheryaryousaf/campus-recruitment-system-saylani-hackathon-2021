{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"H:\\\\React\\\\native\\\\campus-recruitment\\\\app\\\\screens\\\\auth\\\\RegisterScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport colors from \"../../config/colors\";\nimport * as yup from 'yup';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { AppForm, AppFormField, AppFormRadioField, SubmitButton } from \"../../components/forms\";\nimport { connect } from 'react-redux';\nimport { registerUser } from \"../../actions/auth\";\nvar validationSchema = yup.object().shape({\n  username: yup.string().required().label('Username'),\n  email: yup.string().email().required().label('Email'),\n  password: yup.string().required().min(6).label('Password'),\n  password2: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match')\n});\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation,\n      registerUser = _ref.registerUser;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(SimpleLineIcons, {\n    name: \"graduation\",\n    size: 124,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Register Here\"), React.createElement(AppForm, {\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      password2: '',\n      type: ''\n    },\n    onSubmit: function onSubmit(values) {\n      registerUser(values.username, values.email, values.password, values.password2, values.type);\n    },\n    validationSchema: validationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(AppFormField, {\n    icon: \"account-outline\",\n    placeholder: \"Username\",\n    name: \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), React.createElement(AppFormField, {\n    icon: \"email\",\n    placeholder: \"Email\",\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    name: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), React.createElement(AppFormField, {\n    icon: \"lock\",\n    placeholder: \"Password\",\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    name: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), React.createElement(AppFormField, {\n    icon: \"lock\",\n    placeholder: \"Confirm Password\",\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    name: \"password2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      marginBottom: '0.5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.userType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Select User Type\"), React.createElement(AppFormRadioField, {\n    value: \"student\",\n    text: \"Student\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormRadioField, {\n    value: \"company\",\n    text: \"Company\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), React.createElement(SubmitButton, {\n    title: \"Register\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }))), React.createElement(Text, {\n    style: styles.authLinkText,\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Already have an account? Login Here\"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.medium\n  },\n  heading: {\n    fontSize: 24,\n    color: colors.white,\n    fontWeight: 'bold'\n  },\n  form: {\n    width: '100%',\n    marginVertical: 8,\n    paddingRight: 25,\n    paddingLeft: 25\n  },\n  authLinkText: {\n    marginTop: 5,\n    color: colors.white,\n    textAlign: 'left',\n    width: '84%'\n  },\n  userType: {\n    color: colors.white,\n    marginBottom: 3,\n    fontWeight: 'bold'\n  }\n});\nexport default connect(null, {\n  registerUser: registerUser\n})(RegisterScreen);","map":{"version":3,"sources":["H:/React/native/campus-recruitment/app/screens/auth/RegisterScreen.js"],"names":["React","colors","yup","SimpleLineIcons","AppForm","AppFormField","AppFormRadioField","SubmitButton","connect","registerUser","validationSchema","object","shape","username","string","required","label","email","password","min","password2","oneOf","ref","RegisterScreen","navigation","styles","container","heading","type","values","form","marginBottom","userType","authLinkText","navigate","StyleSheet","create","display","flex","justifyContent","alignItems","backgroundColor","medium","fontSize","color","white","fontWeight","width","marginVertical","paddingRight","paddingLeft","marginTop","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAIA,OAAOC,MAAP;AAGA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAGA,SACEC,OADF,EAEEC,YAFF,EAGEC,iBAHF,EAIEC,YAJF;AAQA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT;AAGA,IAAMC,gBAAgB,GAAGR,GAAG,CAACS,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,QAAQ,EAAEX,GAAG,CAACY,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,UAA9B,CADgC;AAE1CC,EAAAA,KAAK,EAAEf,GAAG,CAACY,MAAJ,GAAaG,KAAb,GAAqBF,QAArB,GAAgCC,KAAhC,CAAsC,OAAtC,CAFmC;AAG1CE,EAAAA,QAAQ,EAAEhB,GAAG,CAACY,MAAJ,GAAaC,QAAb,GAAwBI,GAAxB,CAA4B,CAA5B,EAA+BH,KAA/B,CAAqC,UAArC,CAHgC;AAI1CI,EAAAA,SAAS,EAAElB,GAAG,CACXY,MADQ,GAERO,KAFQ,CAEF,CAACnB,GAAG,CAACoB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAFE,EAE2B,sBAF3B;AAJ+B,CAAnB,CAAzB;;AASA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkC;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAnBf,YAAmB,QAAnBA,YAAmB;AACvD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,YAAtB;AAAmC,IAAA,IAAI,EAAE,GAAzC;AAA8C,IAAA,KAAK,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE,oBAAC,OAAD;AACE,IAAA,aAAa,EAAE;AACbd,MAAAA,QAAQ,EAAE,EADG;AAEbI,MAAAA,KAAK,EAAE,EAFM;AAGbC,MAAAA,QAAQ,EAAE,EAHG;AAIbE,MAAAA,SAAS,EAAE,EAJE;AAKbQ,MAAAA,IAAI,EAAE;AALO,KADjB;AAQE,IAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AACpBpB,MAAAA,YAAY,CACVoB,MAAM,CAAChB,QADG,EAEVgB,MAAM,CAACZ,KAFG,EAGVY,MAAM,CAACX,QAHG,EAIVW,MAAM,CAACT,SAJG,EAKVS,MAAM,CAACD,IALG,CAAZ;AAOD,KAhBH;AAiBE,IAAA,gBAAgB,EAAElB,gBAjBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,WAAW,EAAE,KAHf;AAIE,IAAA,cAAc,EAAC,MAJjB;AAKE,IAAA,YAAY,EAAC,eALf;AAME,IAAA,IAAI,EAAC,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAcE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,WAAW,EAAE,KAHf;AAIE,IAAA,cAAc,EAAC,MAJjB;AAKE,IAAA,eAAe,MALjB;AAME,IAAA,IAAI,EAAC,UANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAsBE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,WAAW,EAAE,KAHf;AAIE,IAAA,cAAc,EAAC,MAJjB;AAKE,IAAA,eAAe,MALjB;AAME,IAAA,IAAI,EAAC,WANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EA8BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,SAAzB;AAAmC,IAAA,IAAI,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,SAAzB;AAAmC,IAAA,IAAI,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CA9BF,EAmCE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,CAnBF,CAHF,EA4DE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACQ,YADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMT,UAAU,CAACU,QAAX,CAAoB,OAApB,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CA5DF,CADF;AAqED,CAtED;;AAwEA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,eAAe,EAAExC,MAAM,CAACyC;AALf,GADoB;AAQ/Bf,EAAAA,OAAO,EAAE;AACPgB,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,KAAK,EAAE3C,MAAM,CAAC4C,KAFP;AAGPC,IAAAA,UAAU,EAAE;AAHL,GARsB;AAa/BhB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,cAAc,EAAE,CAFZ;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJC,IAAAA,WAAW,EAAE;AAJT,GAbyB;AAmB/BjB,EAAAA,YAAY,EAAE;AACZkB,IAAAA,SAAS,EAAE,CADC;AAEZP,IAAAA,KAAK,EAAE3C,MAAM,CAAC4C,KAFF;AAGZO,IAAAA,SAAS,EAAE,MAHC;AAIZL,IAAAA,KAAK,EAAE;AAJK,GAnBiB;AAyB/Bf,EAAAA,QAAQ,EAAE;AACRY,IAAAA,KAAK,EAAE3C,MAAM,CAAC4C,KADN;AAERd,IAAAA,YAAY,EAAE,CAFN;AAGRe,IAAAA,UAAU,EAAE;AAHJ;AAzBqB,CAAlB,CAAf;AAgCA,eAAetC,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,YAAY,EAAZA;AAAF,CAAP,CAAP,CAAgCc,cAAhC,CAAf","sourcesContent":["import React from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\n\r\n// Import Configs\r\nimport colors from '../../config/colors'\r\n\r\n// Import Libraries\r\nimport * as yup from 'yup'\r\nimport { SimpleLineIcons } from '@expo/vector-icons'\r\n\r\n// Import Components\r\nimport {\r\n  AppForm,\r\n  AppFormField,\r\n  AppFormRadioField,\r\n  SubmitButton,\r\n} from '../../components/forms'\r\n\r\n// Import Redux Stuff\r\nimport { connect } from 'react-redux'\r\nimport { registerUser } from '../../actions/auth'\r\n\r\n// Validation Schema\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().required().label('Username'),\r\n  email: yup.string().email().required().label('Email'),\r\n  password: yup.string().required().min(6).label('Password'),\r\n  password2: yup\r\n    .string()\r\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\r\n})\r\n\r\nconst RegisterScreen = ({ navigation, registerUser }) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <SimpleLineIcons name='graduation' size={124} color='white' />\r\n      <Text style={styles.heading}>Register Here</Text>\r\n      <AppForm\r\n        initialValues={{\r\n          username: '',\r\n          email: '',\r\n          password: '',\r\n          password2: '',\r\n          type: '',\r\n        }}\r\n        onSubmit={(values) => {\r\n          registerUser(\r\n            values.username,\r\n            values.email,\r\n            values.password,\r\n            values.password2,\r\n            values.type\r\n          )\r\n        }}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <View style={styles.form}>\r\n          <AppFormField\r\n            icon='account-outline'\r\n            placeholder='Username'\r\n            name='username'\r\n          />\r\n          <AppFormField\r\n            icon='email'\r\n            placeholder='Email'\r\n            autoCorrect={false}\r\n            autoCapitalize='none'\r\n            keyboardType='email-address'\r\n            name='email'\r\n          />\r\n          <AppFormField\r\n            icon='lock'\r\n            placeholder='Password'\r\n            autoCorrect={false}\r\n            autoCapitalize='none'\r\n            secureTextEntry\r\n            name='password'\r\n          />\r\n          <AppFormField\r\n            icon='lock'\r\n            placeholder='Confirm Password'\r\n            autoCorrect={false}\r\n            autoCapitalize='none'\r\n            secureTextEntry\r\n            name='password2'\r\n          />\r\n          <View style={{ marginBottom: '0.5rem' }}>\r\n            <Text style={styles.userType}>Select User Type</Text>\r\n            <AppFormRadioField value='student' text='Student' />\r\n            <AppFormRadioField value='company' text='Company' />\r\n          </View>\r\n          <SubmitButton title='Register' />\r\n        </View>\r\n      </AppForm>\r\n      <Text\r\n        style={styles.authLinkText}\r\n        onPress={() => navigation.navigate('Login')}\r\n      >\r\n        Already have an account? Login Here\r\n      </Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: colors.medium,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    color: colors.white,\r\n    fontWeight: 'bold',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginVertical: 8,\r\n    paddingRight: 25,\r\n    paddingLeft: 25,\r\n  },\r\n  authLinkText: {\r\n    marginTop: 5,\r\n    color: colors.white,\r\n    textAlign: 'left',\r\n    width: '84%',\r\n  },\r\n  userType: {\r\n    color: colors.white,\r\n    marginBottom: 3,\r\n    fontWeight: 'bold',\r\n  },\r\n})\r\n\r\nexport default connect(null, { registerUser })(RegisterScreen)\r\n"]},"metadata":{},"sourceType":"module"}