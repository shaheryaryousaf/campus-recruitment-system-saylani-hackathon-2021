{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { COMPLETE_C_PROFILE_SUCCESS, COMPLETE_C_PROFILE_FAIL, GET_C_PROFILES_SUCCESS, GET_C_PROFILES_FAIL } from \"../actions/types\";\nvar initialState = {\n  companies: [],\n  company: {}\n};\n\nvar Companies = function Companies() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case COMPLETE_C_PROFILE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        companies: [payload].concat(_toConsumableArray(state.companies))\n      });\n\n    case GET_C_PROFILES_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        companies: payload\n      });\n\n    case COMPLETE_C_PROFILE_FAIL:\n    case GET_C_PROFILES_FAIL:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default Companies;","map":{"version":3,"sources":["H:/React/native/campus-recruitment/app/reducers/Companies.js"],"names":["COMPLETE_C_PROFILE_SUCCESS","COMPLETE_C_PROFILE_FAIL","GET_C_PROFILES_SUCCESS","GET_C_PROFILES_FAIL","initialState","companies","company","Companies","state","action","type","payload"],"mappings":";;;;;;;AAAA,SACEA,0BADF,EAEEC,uBAFF,EAGEC,sBAHF,EAIEC,mBAJF;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AAAA,MAC1CC,IAD0C,GACxBD,MADwB,CAC1CC,IAD0C;AAAA,MACpCC,OADoC,GACxBF,MADwB,CACpCE,OADoC;;AAGlD,UAAQD,IAAR;AACE,SAAKV,0BAAL;AACE,6CACKQ,KADL;AAEEH,QAAAA,SAAS,GAAGM,OAAH,4BAAeH,KAAK,CAACH,SAArB;AAFX;;AAIF,SAAKH,sBAAL;AACE,6CACKM,KADL;AAEEH,QAAAA,SAAS,EAAEM;AAFb;;AAIF,SAAKV,uBAAL;AACA,SAAKE,mBAAL;AACE,+BACKK,KADL;;AAGF;AACE,aAAOA,KAAP;AAjBJ;AAmBD,CAtBD;;AAwBA,eAAeD,SAAf","sourcesContent":["import {\r\n  COMPLETE_C_PROFILE_SUCCESS,\r\n  COMPLETE_C_PROFILE_FAIL,\r\n  GET_C_PROFILES_SUCCESS,\r\n  GET_C_PROFILES_FAIL,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  companies: [],\r\n  company: {},\r\n}\r\n\r\nconst Companies = (state = initialState, action) => {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case COMPLETE_C_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        companies: [payload, ...state.companies],\r\n      }\r\n    case GET_C_PROFILES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        companies: payload,\r\n      }\r\n    case COMPLETE_C_PROFILE_FAIL:\r\n    case GET_C_PROFILES_FAIL:\r\n      return {\r\n        ...state,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default Companies\r\n"]},"metadata":{},"sourceType":"module"}