{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"H:\\\\React\\\\native\\\\campus-recruitment\\\\app\\\\screens\\\\jobs\\\\AddJobScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport colors from \"../../config/colors\";\nimport * as yup from 'yup';\nimport { Picker } from '@react-native-picker/picker';\nimport { AppForm, AppFormField, SubmitButton } from \"../../components/forms\";\nvar validationSchema = yup.object().shape({\n  title: yup.string().required().label('Job Title'),\n  skills: yup.string().required().label('Skills')\n});\n\nvar AddJobScreen = function AddJobScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      availability = _useState2[0],\n      setAvailability = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(AppForm, {\n    initialValues: {\n      title: '',\n      description: '',\n      availability: availability,\n      skills: '',\n      type: type,\n      expected_salary: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    validationSchema: validationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Job Title\"), React.createElement(AppFormField, {\n    placeholder: \"Title\",\n    name: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Description\"), React.createElement(AppFormField, {\n    placeholder: \"Description\",\n    name: \"description\",\n    multiline: true,\n    numberOfLines: 5,\n    style: {\n      minHeight: 200,\n      textAlignVertical: 'top',\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Type\"), React.createElement(Picker, {\n    selectedValue: type,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setType(itemValue);\n    },\n    name: \"type\",\n    style: styles.dropdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Part Time\",\n    value: \"Part Time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Fulltime\",\n    value: \"Fulltime\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Availability\"), React.createElement(Picker, {\n    selectedValue: availability,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setAvailability(itemValue);\n    },\n    name: \"availability\",\n    style: styles.dropdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"in 1 week\",\n    value: \"in 1 week\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"in 2 weeks\",\n    value: \"in 2 weeks\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"in a month\",\n    value: \"in a month\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"more than a month\",\n    value: \"more than a month\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Expected Salary\"), React.createElement(AppFormField, {\n    placeholder: \"Expected Salary\",\n    name: \"expected_salary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), React.createElement(SubmitButton, {\n    title: \"Add Job\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))), React.createElement(Text, {\n    style: styles.authLinkText,\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Already have an account? Login Here\"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.white,\n    display: 'flex',\n    flex: 1\n  },\n  heading: {\n    fontSize: 24,\n    color: colors.white,\n    fontWeight: 'bold'\n  },\n  form: {\n    width: '100%',\n    marginVertical: 8,\n    paddingRight: 25,\n    paddingLeft: 25\n  },\n  authLinkText: {\n    marginTop: 5,\n    color: colors.white,\n    textAlign: 'left',\n    width: '84%'\n  },\n  helpText: {\n    fontSize: 12,\n    fontStyle: 'italic',\n    color: 'gray'\n  },\n  formGroup: {\n    marginBottom: '0.5rem'\n  },\n  form: {\n    padding: '1rem'\n  },\n  dropdown: {\n    width: '100%',\n    padding: 8,\n    paddingLeft: 12,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    flexDirection: 'row',\n    borderColor: colors.medium,\n    borderWidth: 1,\n    alignItems: 'center',\n    marginVertical: 5,\n    backgroundColor: colors.white,\n    minHeight: 47\n  }\n});\nexport default AddJobScreen;","map":{"version":3,"sources":["H:/React/native/campus-recruitment/app/screens/jobs/AddJobScreen.js"],"names":["React","useState","colors","yup","Picker","AppForm","AppFormField","SubmitButton","validationSchema","object","shape","title","string","required","label","skills","AddJobScreen","navigation","availability","setAvailability","type","setType","styles","container","description","expected_salary","values","console","log","form","formGroup","minHeight","textAlignVertical","justifyContent","itemValue","itemIndex","dropdown","authLinkText","navigate","StyleSheet","create","backgroundColor","white","display","flex","heading","fontSize","color","fontWeight","width","marginVertical","paddingRight","paddingLeft","marginTop","textAlign","helpText","fontStyle","marginBottom","padding","borderColor","borderWidth","borderRadius","flexDirection","medium","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\n\r\n// Import Configs\r\nimport colors from '../../config/colors'\r\n\r\n// Import Libraries\r\nimport * as yup from 'yup'\r\nimport { Picker } from '@react-native-picker/picker'\r\n\r\n// Import Components\r\nimport { AppForm, AppFormField, SubmitButton } from '../../components/forms'\r\n\r\n// Validation Schema\r\nconst validationSchema = yup.object().shape({\r\n  title: yup.string().required().label('Job Title'),\r\n  skills: yup.string().required().label('Skills'),\r\n})\r\n\r\nconst AddJobScreen = ({ navigation }) => {\r\n  const [availability, setAvailability] = useState()\r\n  const [type, setType] = useState()\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <AppForm\r\n        initialValues={{\r\n          title: '',\r\n          description: '',\r\n          availability: availability,\r\n          skills: '',\r\n          type: type,\r\n          expected_salary: '',\r\n        }}\r\n        onSubmit={(values) => {\r\n          console.log(values)\r\n        }}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <View style={styles.form}>\r\n          <View style={styles.formGroup}>\r\n            <Text>Job Title</Text>\r\n            <AppFormField placeholder='Title' name='title' />\r\n          </View>\r\n\r\n          <View style={styles.formGroup}>\r\n            <Text>Description</Text>\r\n            <AppFormField\r\n              placeholder='Description'\r\n              name='description'\r\n              multiline={true}\r\n              numberOfLines={5}\r\n              style={{\r\n                minHeight: 200,\r\n                textAlignVertical: 'top',\r\n                justifyContent: 'flex-start',\r\n              }}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.formGroup}>\r\n            <Text>Type</Text>\r\n            <Picker\r\n              selectedValue={type}\r\n              onValueChange={(itemValue, itemIndex) => setType(itemValue)}\r\n              name='type'\r\n              style={styles.dropdown}\r\n            >\r\n              <Picker.Item label='Part Time' value='Part Time' />\r\n              <Picker.Item label='Fulltime' value='Fulltime' />\r\n            </Picker>\r\n          </View>\r\n\r\n          <View style={styles.formGroup}>\r\n            <Text>Availability</Text>\r\n            <Picker\r\n              selectedValue={availability}\r\n              onValueChange={(itemValue, itemIndex) =>\r\n                setAvailability(itemValue)\r\n              }\r\n              name='availability'\r\n              style={styles.dropdown}\r\n            >\r\n              <Picker.Item label='in 1 week' value='in 1 week' />\r\n              <Picker.Item label='in 2 weeks' value='in 2 weeks' />\r\n              <Picker.Item label='in a month' value='in a month' />\r\n              <Picker.Item\r\n                label='more than a month'\r\n                value='more than a month'\r\n              />\r\n            </Picker>\r\n          </View>\r\n\r\n          <View style={styles.formGroup}>\r\n            <Text>Expected Salary</Text>\r\n            <AppFormField\r\n              placeholder='Expected Salary'\r\n              name='expected_salary'\r\n            />\r\n          </View>\r\n\r\n          \r\n\r\n          <SubmitButton title='Add Job' />\r\n        </View>\r\n      </AppForm>\r\n      <Text\r\n        style={styles.authLinkText}\r\n        onPress={() => navigation.navigate('Login')}\r\n      >\r\n        Already have an account? Login Here\r\n      </Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.white,\r\n    display: 'flex',\r\n    flex: 1,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    color: colors.white,\r\n    fontWeight: 'bold',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginVertical: 8,\r\n    paddingRight: 25,\r\n    paddingLeft: 25,\r\n  },\r\n  authLinkText: {\r\n    marginTop: 5,\r\n    color: colors.white,\r\n    textAlign: 'left',\r\n    width: '84%',\r\n  },\r\n  helpText: {\r\n    fontSize: 12,\r\n    fontStyle: 'italic',\r\n    color: 'gray',\r\n  },\r\n  formGroup: {\r\n    marginBottom: '0.5rem',\r\n  },\r\n  form: {\r\n    padding: '1rem',\r\n  },\r\n  dropdown: {\r\n    width: '100%',\r\n    padding: 8,\r\n    paddingLeft: 12,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    flexDirection: 'row',\r\n    borderColor: colors.medium,\r\n    borderWidth: 1,\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n    backgroundColor: colors.white,\r\n    minHeight: 47,\r\n  },\r\n})\r\n\r\nexport default AddJobScreen\r\n"]},"metadata":{},"sourceType":"module"}